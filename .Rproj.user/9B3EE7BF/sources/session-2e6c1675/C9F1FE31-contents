---
title: "Learning R"
subtitle: "Session 1: Foundations of R Programming"
format: 
  revealjs:
    theme: [clean.scss]
    transition: slide
    highlight-style: github
    code-copy: true
    auto-stretch: false
    fig-dpi: 300
---

# Part A: Getting Started with R {.section}

## Welcome to R!

R is a powerful programming language for:

-   Statistical computing
-   Data analysis
-   Data visualization
-   Machine learning

## Let's install R!

![](install.png){.absolute top=160 left=0 width="100%" height="auto"}



For downloading R: https://cran.r-project.org/mirrors.html 


## Let's install R Studio!


![](studio.png){.absolute top=160 left=0 width="100%" height="auto"}

For downloading R Studio: https://posit.co/products/open-source/rstudio/

## RStudio Interface

![](console.png){.absolute top=50 left=0 width="100%" height="auto"}

::: {.absolute top=450 left=50 style="font-size: 75%;"}
- Script Editor (top-left) 
- Console (bottom-left) 
- Environment (top-right) 
- Files/Plots/Help (bottom-right)
:::

## Creating Your First Project

::: incremental
1.  File â†’ New Project
2.  Choose Directory Location
3.  Name Your Project
4.  Click "Create Project"
:::

::: callout-tip
Projects help organize your work and make it reproducible!
:::

## Data Types

Let's understand data types:

**Numeric**
```{r,echo=T}
x <- 42
class(x)
```

**Character**
```{r, echo = T}
name <- "UAE"
class(name)
```

**Logical**
```{r, echo = T}
is_fun <- TRUE
class(is_fun)
```

## ðŸ”¨ Practice Time!

Try these exercises in your console:

1.  Create a numeric variable called `Time_to_travel_home` with the time you spend travelling
2.  Create a character variable `Where_do_I_work`
3.  Create a logical variable `Learning_impact_evaluation`
4.  Use `class()` to check their types

## ðŸ”¨ Results

```{r, eval = F, echo = T}
Time_to_travel_home <- 
Where_do_I_work <- 
Learning_impact_evaluation <- 
```

::: {.fragment}

::: callout-warning

Watch out for this common mistakes!

```{r, eval = F, echo = T}

Time to travel home <- 45

Where do I work == ADEO 

Learning-impact-evaluation <- TRUE  


```
::: 
:::

# Part B: Working with Data {.section}

## Vectors in R

Vectors are one-dimensional arrays:

```{r, echo = T}

# Creating vectors
numbers <- c(1, 2, 3, 4, 5)

fruits <- c("apple", "banana", "orange")

logical_values <- c(TRUE, FALSE, TRUE)

# Vector operations

numbers + 2

numbers * 2

```

## ðŸ”¨ Practice Time: Vectors

Create these vectors and perform operations:

```{r}
#| eval: false
# Create a vector of 5 numbers
my_numbers <- 

# Create a vector of 3 colors
my_colors <- 

# Multiple your numbers by 10
```

## Built-in Functions

R has many useful built-in functions:

```{r}
# Statistical functions
numbers <- c(1, 2, 3, 4, 5)
mean(numbers)
sum(numbers)
max(numbers)
min(numbers)

# Character functions
text <- "data science"
toupper(text)
nchar(text)
```

## Getting Help in R

Three ways to get help:

1.  Use `?` before function name:

```{r}
#| eval: false
?mean
```

2.  Use `help()`:

```{r}
#| eval: false
help(sum)
```

3.  Use examples:

```{r}
#| eval: false
example(max)
```

## Installing Packages

Packages extend R's functionality:

```{r}
#| eval: false
# Install a package
install.packages("tidyverse")

# Load a package
library(tidyverse)
```

::: callout-warning
Run `install.packages()` once per computer Run `library()` in each new session
:::

# Part C: Working with Data Frames {.section}

## Creating Data Frames

Data frames are 2-dimensional data structures:

```{r}
# Create a simple data frame
df <- data.frame(
  name = c("Alice", "Bob", "Charlie"),
  age = c(25, 30, 35),
  likes_pizza = c(TRUE, FALSE, TRUE)
)

# View the data frame
df
```

## Reading Data into R

Let's read some real data:

```{r}
#| eval: false
# Read CSV file
data <- read.csv("your_file.csv")

# Read tab-delimited file
data <- read.table("your_file.txt", 
                   header = TRUE, 
                   sep = "\t")
```

## ðŸ”¨ Practice Time: Reading Data

Download and read the iris dataset:

```{r}
# Built-in dataset
data(iris)

# Look at the first few rows
head(iris)
```

## Basic Data Inspection

Essential functions for data exploration:

```{r}
# Structure of the data
str(iris)

# Statistical summary
summary(iris)

# First few rows
head(iris)

# Last few rows
tail(iris)
```

## Final Exercise

Create a complete analysis:

1.  Create a new script file
2.  Load the iris dataset
3.  Calculate mean of each numeric column
4.  Create a new column for petal area
5.  Save your results

```{r}
#| eval: false
# Your code here!
data(iris)

# Calculate means
# ...

# Create petal area
# ...
```

# Thank You! {.section}

## Resources for Learning More

-  [Installing R and RStudio](https://alexd106.github.io/intro2R/howto.html)
-   [R for Data Science](https://r4ds.had.co.nz/)
-   [RStudio Cheat Sheets](https://www.rstudio.com/resources/cheatsheets/)
-   [R Documentation](https://www.rdocumentation.org/)

## Exercise Solutions

Will be posted after class!

::: callout-tip
Remember: Practice is key to learning R!
:::
